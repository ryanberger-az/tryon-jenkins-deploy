{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "cycleci-jenkinsmgr",
            "metadata": {
                "description": "The name of you Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "rberger",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(concat('cycleci-', uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B2s",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "deployVpn": {
            "type": "string",
            "metadata": {
                "description": "Do you want to deploy a VPN Gateway? If yes, you must fill out: VPN Type, Local Gateway IP Address, Gateway Subnet Prefix, Gateway Name, Local Gateway Name, Gateway SKU, IKE Version, Connection Name, and Shared Key."
            },
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "vpnType": {
            "type": "string",
            "metadata": {
                "description": "Route based or policy based"
            },
            "defaultValue": "RouteBased",
            "allowedValues": [
                "RouteBased",
                "PolicyBased"
            ]
        },
        "localGatewayIpAddress": {
            "type": "string",
            "defaultValue": "1.1.1.1",
            "metadata": {
                "description": "Public IP of your VPN appliance."
            }
        },
        "localAddressPrefix": {
            "type": "array",
            "defaultValue": [
                "192.168.0.0/16",
                "172.16.0.0/12"
            ],
            "metadata": {
                "description": "The CIDR block(s) representing the address space of the on-prem VPN network's Subnet. Seperate ranges with a ','. These can also altered after the deployment."
            }
        },
        "azureVNetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.3.0.0/16",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure VNet"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.3.1.0/24",
            "metadata": {
                "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
            }
        },
        "gatewaySubnetPrefix": {
            "type": "string",
            "defaultValue": "10.3.200.0/29",
            "metadata": {
                "description": "CIDR block for gateway subnet, subset of azureVNetAddressPrefix address space"
            }
        },
        "gatewayName": {
            "type": "string",
            "defaultValue": "Azure-VPN-GW",
            "metadata": {
                "description": "Arbitrary name for the new gateway"
            }
        },
        "localGatewayName": {
            "type": "string",
            "defaultValue": "Azure-Local-GW",
            "metadata": {
                "description": "Arbitrary name for the local gateway"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "VpnGw1",
                "VpnGw2"
            ],
            "metadata": {
                "description": "The Sku of the Gateway. Basic is recommended for DevTest and simple setups. It will support 10 Site-to-Site tunnels and 100 Mbps throughput. VpnGw1 supports up to 30 S2S tunnels with 650 Mbps throughput. VpnGw3 supports up to 30 S2S tunnels with 1 Gbps throughput. For more info on pricing, check: https://azure.microsoft.com/en-us/pricing/details/vpn-gateway/"
            }
        },
        "ikeVersion": {
            "type": "string",
            "defaultValue": "IKEv1",
            "allowedValues": [
                "IKEv1",
                "IKEv2"
            ],
            "metadata": {
                "description": "The Connection Protocol to be used. Either IKEv1 or IKEv2. *This cannot be changed after a connection has been created."
            }
        },
        "connectionName": {
            "type": "string",
            "defaultValue": "Azure-to-OnPrem",
            "metadata": {
                "description": "Arbitrary name for the new connection between Azure VNet and other network"
            }
        },
        "sharedKey": {
            "type": "securestring",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            }
        }
    },
    "variables": {
        "publicIpAddressName": "[concat(parameters('vmName'), '-pip' )]",
        "gatewayPublicIPName": "[concat(parameters('gatewayName'), '-pip' )]",
        "networkInterfaceName": "[concat(parameters('vmName'), '-nic')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "subnetRefVpn": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkNameVpn'), variables('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "virtualNetworkName": "cycleci-azure-vnet",
        "virtualNetworkNameVpn": "cycleci-azure-vnet-vpn",
        "subnetName": "cycleci-jenkins-subnet",
        "networkSecurityGroupName": "cycleci-jenkins-nsg",
        "ubuntuOSVersion": "18.04-LTS",
        "location": "[resourceGroup().location]",
        "_artifactsLocation": "https://bitbucket.org/tryonsolutions/cycle-ci-app-deploy/raw/c99744c89fb39a5e2abd7ac99a68d077a9fb692b/",
        "_artifactsLocationSasToken": "",
        "customData": "[concat('#include\n',uri(variables('_artifactsLocation'),concat('cloud-init.txt',variables('_artifactsLocationSasToken'))))]",
        "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkNameVpn'),'GatewaySubnet')]"

    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkNameVpn'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[if(equals(parameters('deployVpn'),'Yes'), variables('subnetRefVpn'), variables('subnetRef'))]" 
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "condition": "[equals(parameters('deployVpn'),'Yes')]",
            "name": "[variables('virtualNetworkNameVpn')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('azureVNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "condition": "[equals(parameters('deployVpn'),'No')]",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('azureVNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-04-01",
            "condition": "[equals(parameters('deployVpn'),'Yes')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[parameters('gatewayName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('gatewayPublicIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkNameVpn'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gatewaySubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayPublicIPName'))]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "[parameters('vpnType')]",
                "enableBgp": "false"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "condition": "[equals(parameters('deployVpn'),'Yes')]",
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[parameters('localGatewayName')]",
            "location": "[variables('location')]",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": "[parameters('localAddressPrefix')]"
                },
                "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "condition": "[equals(parameters('deployVpn'),'Yes')]",
            "name": "[parameters('connectionName')]",
            "type": "Microsoft.Network/connections",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
                "[concat('Microsoft.Network/localNetworkGateways/', parameters('localGatewayName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName'))]"
                },
                "connectionType": "IPsec",
                "connectionProtocol": "[parameters('ikeVersion')]",
                "routingWeight": 10,
                "sharedKey": "[parameters('sharedKey')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "condition": "[equals(parameters('deployVpn'),'Yes')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gatewayPublicIPName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('vmName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "customData": "[base64(variables('customData'))]"
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
        }
    }
}